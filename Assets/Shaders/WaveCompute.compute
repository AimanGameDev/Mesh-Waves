#pragma kernel CSMain

// Buffers
RWStructuredBuffer<float> amplitudes;
RWStructuredBuffer<float> previousAmplitudes;

// Parameters
uint _Width;
uint _Height;
float _Damping;

[numthreads(64,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _Width * _Height) return;

    uint x = id.x % _Width;
    uint y = id.x / _Width;

    uint leftIndex = id.x - 1;
    uint rightIndex = id.x + 1;
    uint upIndex = id.x - _Width;
    uint downIndex = id.x + _Width;

    //TODO: Remove branching
    float current = amplitudes[id.x];
    float left = leftIndex >= 0 ? amplitudes[leftIndex] : 0.0;
    float right = rightIndex < _Width * _Height ? amplitudes[rightIndex] : 0.0;
    float up = upIndex >= 0 ? amplitudes[upIndex] : 0.0;
    float down = downIndex < _Width * _Height ? amplitudes[downIndex] : 0.0;

    float newAmplitude = (current + left + right + up + down) / 5.0 * (1.0 - _Damping);

    amplitudes[id.x] = newAmplitude;
    previousAmplitudes[id.x] = amplitudes[id.x];
}